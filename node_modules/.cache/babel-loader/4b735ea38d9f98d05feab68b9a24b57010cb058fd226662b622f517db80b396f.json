{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Listado de Provincias\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.provincias, row => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: row.id\n    }, [_createVNode(_component_router_link, {\n      to: {\n        name: 'provincia_detalle',\n        params: {\n          id: row.id\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(row.nombre), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_renderList","_ctx","provincias","row","key","id","_createVNode","_component_router_link","to","name","params","default","_withCtx","_createTextVNode","_toDisplayString","nombre","_"],"sources":["C:\\www\\vue_fronted\\src\\views\\provincias\\provincia_lista.vue"],"sourcesContent":["<template>\r\n    <h1>Listado de Provincias</h1>\r\n    <ul>\r\n        <li v-for=\"row in provincias\" :key=\"row.id\">\r\n            <router-link :to=\"{name: 'provincia_detalle',params: {id:row.id}}\">\r\n                {{ row.nombre }}\r\n            </router-link>\r\n           \r\n        </li>\r\n    </ul>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            autores: []\r\n        }\r\n    },\r\n    created() {\r\n        this.getAutores();\r\n    },\r\n    methods: {\r\n        getProvincias(){\r\n          this.axios.get('http://127.0.0.1:8000/api/autor')\r\n          .then(response =>{\r\n               this.provincias = response.data\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          })\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":";gCACIA,mBAAA,CAA8B,YAA1B,uBAAqB;;;uBAD7BC,mBAAA,CAAAC,SAAA,SACIC,UAA8B,EAC9BH,mBAAA,CAOK,c,kBANDC,mBAAA,CAKKC,SAAA,QARbE,WAAA,CAG0BC,IAAA,CAAAC,UAAU,EAAjBC,GAAG;yBAAdN,mBAAA,CAKK;MAL0BO,GAAG,EAAED,GAAG,CAACE;QACpCC,YAAA,CAEcC,sBAAA;MAFAC,EAAE;QAAAC,IAAA;QAAAC,MAAA;UAAAL,EAAA,EAAyCF,GAAG,CAACE;QAAE;MAAA;;MAJ3EM,OAAA,EAAAC,QAAA,CAKgB,MAAgB,CALhCC,gBAAA,CAAAC,gBAAA,CAKmBX,GAAG,CAACY,MAAM,iB;MAL7BC,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}